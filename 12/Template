#include <iostream> 
using namespace std;

template<typename T>
void InsertionSort(T list[], int listSize)
{
	for (int i = 1; i < listSize; i++)
	{
		T currentElement = list[i];
		int k;
		for (k = i - 1; k >= 0 && list[k] > currentElement; k--)
		{
			list[k + 1] = list[k];
		}
		list[k + 1] = currentElement;
	}
}

template<typename T>
int BinarySearch(const T list[], T key, int listSize)
{
	int low = 0;
	int high = listSize - 1;

	while (high >= low)
	{
		int mid = (low + high) / 2;
		if (key < list[mid])
			high = mid - 1;
		else if (key == list[mid])
			return mid;
		else
		    low = mid + 1;
	}
	return -1;
}

int main() 
{
	int list1[] = { 1,5,6,2,3,7,9,8,4 };
	double list2[] = {1.1,5.5,6.6,2.2,3.3,7.7,9.9,8.8,4.4};
	int array[3];
	double Darray[3];
	for (int i = 0;i < 3;i++)
	{
		int a = 0;
		cin >> a;
		array[i] = a;
	}
	for (int i = 0;i < 3;i++)
	{
		double b = 0;
		cin >> b;
		Darray[i] = b;
	}

	cout << "From: ";
	for (int i = 0;i < 9;i++)
	{
		cout << list1[i];
		(i != 8) ? (cout << ",") : (cout << endl);
	}
	InsertionSort(list1, 9);
	cout << "To: ";
	for (int i = 0;i < 9;i++)
	{
		cout << list1[i];
		(i != 8) ? (cout << ",") : (cout << endl);
	}
	for (int i = 0;i < 3;i++)
	{
		cout << array[i] << " at " << BinarySearch(list1, int(array[i]), 9) << endl;
	}
	cout << endl << endl;
	cout << "From: ";
	for (int i = 0;i < 9;i++)
	{
		cout << list2[i];
		(i != 8) ? (cout << ",") : (cout << endl);
	}
	InsertionSort(list2, 9);
	cout << "To: ";
	for (int i = 0;i < 9;i++)
	{
		cout << list2[i];
		(i != 8) ? (cout << ",") : (cout << endl);
	}
	for (int i = 0;i < 3;i++)
	{
		cout << Darray[i] << " at " << BinarySearch(list2, Darray[i], 9) << endl;
	}
}
